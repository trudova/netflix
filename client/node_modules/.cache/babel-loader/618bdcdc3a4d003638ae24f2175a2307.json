{"ast":null,"code":"var _jsxFileName = \"/Users/liubovtrudova/Desktop/PROJECTS/ntflex clone/netflex/client/src/components/list/List.jsx\",\n    _s = $RefreshSig$();\n\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined } from \"@material-ui/icons\";\nimport { useRef, useState } from \"react\";\nimport ListItem from \"../listItem/ListItem\";\nimport \"./list.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List({\n  list\n}) {\n  _s();\n\n  const [isMoved, setIsMoved] = useState(false);\n  const [slideNumber, setSlideNumber] = useState(0);\n  const [clickLimit] = useState(window.innerWidth / 22);\n  const listRef = useRef();\n\n  const handleClick = direction => {\n    setIsMoved(true);\n    let distance = listRef.current.getBoundingClientRect().x - 56;\n\n    if (direction === \"left\" && slideNumber > 0) {\n      setSlideNumber(slideNumber - 1);\n      listRef.current.style.transform = `translateX(${230 + distance}px)`;\n    }\n\n    if (direction === \"right\" && slideNumber < 10 - clickLimit) {\n      setSlideNumber(slideNumber + 1);\n      listRef.current.style.transform = `translateX(${-230 + distance}px)`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listTitle\",\n      children: list.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIosOutlined, {\n        className: \"sliderArrow left\",\n        onClick: () => handleClick(\"left\"),\n        style: {\n          display: !isMoved && \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: listRef,\n        children: list.content.map((item, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n          index: i,\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosOutlined, {\n        className: \"sliderArrow right\",\n        onClick: () => handleClick(\"right\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"XylGj5AAzYHEP6FpQI3FdRyxGL4=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/liubovtrudova/Desktop/PROJECTS/ntflex clone/netflex/client/src/components/list/List.jsx"],"names":["ArrowBackIosOutlined","ArrowForwardIosOutlined","useRef","useState","ListItem","List","list","isMoved","setIsMoved","slideNumber","setSlideNumber","clickLimit","window","innerWidth","listRef","handleClick","direction","distance","current","getBoundingClientRect","x","style","transform","title","display","content","map","item","i"],"mappings":";;;AAAA,SACEA,oBADF,EAEEC,uBAFF,QAGO,oBAHP;AAIA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AAAA;;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACQ,UAAD,IAAeR,QAAQ,CAACS,MAAM,CAACC,UAAP,GAAoB,EAArB,CAA7B;AAEA,QAAMC,OAAO,GAAGZ,MAAM,EAAtB;;AAEA,QAAMa,WAAW,GAAIC,SAAD,IAAe;AACjCR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIS,QAAQ,GAAGH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCC,CAAxC,GAA4C,EAA3D;;AACA,QAAIJ,SAAS,KAAK,MAAd,IAAwBP,WAAW,GAAG,CAA1C,EAA6C;AAC3CC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAK,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,MAAML,QAAS,KAA/D;AACD;;AACD,QAAID,SAAS,KAAK,OAAd,IAAyBP,WAAW,GAAG,KAAKE,UAAhD,EAA4D;AAC1DD,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAK,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,CAAC,GAAD,GAAOL,QAAS,KAAhE;AACD;AACF,GAXD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BX,IAAI,CAACiB;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,oBAAD;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,MAAD,CAF5B;AAGE,QAAA,KAAK,EAAE;AAAES,UAAAA,OAAO,EAAE,CAACjB,OAAD,IAAY;AAAvB;AAHT;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEO,OAAhC;AAAA,kBACGR,IAAI,CAACmB,OAAL,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,kBAChB,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,CAAjB;AAAoB,UAAA,IAAI,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,uBAAD;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,OAAO,EAAE,MAAMZ,WAAW,CAAC,OAAD;AAF5B;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAxCuBV,I;;KAAAA,I","sourcesContent":["import {\n  ArrowBackIosOutlined,\n  ArrowForwardIosOutlined,\n} from \"@material-ui/icons\";\nimport { useRef, useState } from \"react\";\nimport ListItem from \"../listItem/ListItem\";\nimport \"./list.scss\";\n\nexport default function List({ list }) {\n  const [isMoved, setIsMoved] = useState(false);\n  const [slideNumber, setSlideNumber] = useState(0);\n  const [clickLimit] = useState(window.innerWidth / 22);\n\n  const listRef = useRef();\n\n  const handleClick = (direction) => {\n    setIsMoved(true);\n    let distance = listRef.current.getBoundingClientRect().x - 56;\n    if (direction === \"left\" && slideNumber > 0) {\n      setSlideNumber(slideNumber - 1);\n      listRef.current.style.transform = `translateX(${230 + distance}px)`;\n    }\n    if (direction === \"right\" && slideNumber < 10 - clickLimit) {\n      setSlideNumber(slideNumber + 1);\n      listRef.current.style.transform = `translateX(${-230 + distance}px)`;\n    }\n  };\n  return (\n    <div className=\"list\">\n      <span className=\"listTitle\">{list.title}</span>\n      <div className=\"wrapper\">\n        <ArrowBackIosOutlined\n          className=\"sliderArrow left\"\n          onClick={() => handleClick(\"left\")}\n          style={{ display: !isMoved && \"none\" }}\n        />\n        <div className=\"container\" ref={listRef}>\n          {list.content.map((item, i) => (\n            <ListItem index={i} item={item} />\n          ))}\n        </div>\n        <ArrowForwardIosOutlined\n          className=\"sliderArrow right\"\n          onClick={() => handleClick(\"right\")}\n        />\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}